name: Pull Request Quality Control

on:
  workflow_dispatch:
  pull_request:
    branches: [main]

jobs:
  formatting:
    permissions:
        contents: "write"
        pull-requests: "write"

    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.ref }}
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
    
    - name: Get Prettier version from package-lock.json
      run: |
        PRETTIER_VERSION=$(cat package-lock.json | grep -m 1 'prettier' | cut -d '"' -f 4 | cut -c 2-)
        echo $PRETTIER_VERSION

    - name: Run Prettier (specific version)
      run: |
        npx --yes prettier@$PRETTIER_VERSION --config .prettierrc --write .

    - name: Check for changes
      run: |
        git config --global user.name "sPhil_PR_quality_ctl"
        git config --global user.email "actions@github.com"
        if [[ `git status --porcelain` ]]; then
            git add .
            git commit -m "ci: format code with Prettier [on behalf of ${{ github.event.pull_request.user.login }}]"
            git push origin HEAD:${{ github.event.pull_request.head.ref }}
        fi

  verification:
    needs: formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache/restore@v4
        id: prepyrus-cache-restore
        with:
          path: target/release/prepyrus
          key: ${{ runner.os }}-cargo-${{ hashFiles('scripts/prepyrus/Cargo.lock') }}-${{ hashFiles('scripts/prepyrus/src/**') }}
      - name: Install Rust
        if: steps.prepyrus-cache-restore.outputs.cache-hit != 'true'
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install dependencies
        if: steps.prepyrus-cache-restore.outputs.cache-hit != 'true'
        run: cargo build --release --package prepyrus

      - name: Run prepyrus script in verification mode
        run: target/release/prepyrus absolute_bibliography.bib src/pages verify

      - name: Save Prepyrus to cache
        id: prepyrus-cache-save
        if: steps.prepyrus-cache-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: target/release/prepyrus
          key: ${{ runner.os }}-cargo-${{ hashFiles('scripts/prepyrus/Cargo.lock') }}-${{ hashFiles('scripts/prepyrus/src/**') }}
#
# To include multiple paths for the cache:
# path: |
#   ~/.cargo/bin/
#   ~/.cargo/registry/index/
#   ~/.cargo/registry/cache/
#   ~/.cargo/git/db/
#   target/
